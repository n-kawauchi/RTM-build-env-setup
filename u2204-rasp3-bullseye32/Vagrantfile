# -*- mode: ruby -*-
# -*- coding: utf-8 -*-
# vi: set ft=ruby :

#--------------------------------
VM_NAME = "u2204-bullseye32"
BOX_IMAGE = "ubuntu/jammy64"
DISK_SIZE = "32GB"
MEMORY = 8192
CPU_CORES = 2

# port forwarding
SSH_PORT = 22243
#--------------------------------
# vm settings
# 1) ssh port forwarding
# 2) add tmpfs
# 3) use riken mirror
# 4) install ubuntu-desktop
# 5) libssl installs non-interactively
# 6) scp password authentication
# 7) install tool_packages for OpenRTM-aist core developer
# 8) install remote desktop
# 9) Keyboard japanese layout
#--------------------------------

Vagrant.configure("2") do |config|

  config.vm.define VM_NAME do |node|
    node.vm.hostname = VM_NAME
    node.vm.box = BOX_IMAGE
    node.disksize.size = DISK_SIZE
    node.vm.network :forwarded_port, id: "ssh", guest: 22, host: SSH_PORT
    node.vm.provider "virtualbox" do |v|
      v.name = VM_NAME
      v.gui = true
      v.memory = MEMORY
      v.customize ["modifyvm", :id, 
        "--cpus", "2",
        "--vram", "256",
        "--accelerate3d", "on",
        "--ioapic", "on",
        "--chipset", "ich9",
        "--paravirtprovider", "kvm",
        "--clipboard", "bidirectional"
      ]
    end
    node.vm.boot_timeout = 600
    node.vm.synced_folder "./share", "/home/vagrant/share", create: true, owner: "vagrant", group: "vagrant"

    node.vm.provision "shell" ,inline: <<-SHELL
      # add tmpfs
      echo 'tmpfs /tmp tmpfs rw,nodev,nosuid,size=512M 0 0' >> /etc/fstab
      # use riken mirror
      sed -i -e 's%archive.ubuntu.com/ubuntu%ftp.riken.go.jp/Linux/ubuntu/%g' /etc/apt/sources.list
      apt update

      # libssl installs non-interactively
      UCF_FORCE_CONFOLD=1 \
      DEBIAN_FRONTEND=noninteractive \
      apt -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -qq -y install libssl1.1
      apt -y upgrade

      # time zone
      timedatectl set-timezone Asia/Tokyo

      # scp password authentication
      sed -ie 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      systemctl restart sshd

      # install tool_packages for OpenRTM-aist core developer
      apt -y install wget ant junit

      wget --secure-protocol=TLSv1_2 --no-check-certificate https://raw.githubusercontent.com/OpenRTM/OpenRTM-aist/master/scripts/openrtm2_install_raspbian.sh -O openrtm2_install_raspbian.sh
      sh openrtm2_install_raspbian.sh -l c++ -c --yes

      # QEMU
      apt -y install qemu-utils qemu-system-aarch64 libguestfs-tools xz-utils

      # RaspiOS image
      curl -O https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2022-04-07/2022-04-04-raspios-bullseye-armhf-lite.img.xz
      unxz 2022-04-04-raspios-bullseye-armhf-lite.img.xz

      # Convert it from the raw image to a qcow2 image and add some space
      qemu-img convert -f raw -O qcow2 2022-04-04-raspios-bullseye-armhf-lite.img rasbian.qcow2
      qemu-img resize rasbian.qcow2 16G

      # make sure we get a user account setup
      echo "vagrant:$(echo 'vagrant'|openssl passwd -6 -stdin)" > userconf
      apt -y install libguestfs-tools
      guestmount -a rasbian.qcow2 -m /dev/sda1 /mnt
      mv userconf /mnt
      guestunmount /mnt

      # change file owner
      cp share/bcm2710-rpi-3-b.dtb .
      cp share/kernel8.img .
      cp share/start.sh .
      chown vagrant:vagrant rasbian.qcow2 bcm2710-rpi-3-b.dtb kernel8.img start.sh

    SHELL
  end
end